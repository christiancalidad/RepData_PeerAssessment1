setwd("C:/Users/CHRISTIAN/Desktop/Coursera/Specialization/1/Tarea1Reproducible/RepData_PeerAssessment1")
library(dplyr)
file <- 'activity.zip'
data<- 'activity.csv'
if (!file.exists(file)){
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(URL, file, method="curl")
if (!(file.exists(data) )) {
unzip(file)
}
}
if (!file.exists(file)){
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(URL, file, method="curl")
if (!(file.exists(data) )) {
unzip(file)
}
}
unzip(file)
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
if (!file.exists(file)){
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(URL, file, method="curl")
if (!(file.exists(data) )) {
unzip(file)
}
}
data<-read.csv2(data)
View(data)
data<-read.csv2(data,sep=',')
data<- 'activity.csv'
data<-read.csv2(data,sep=',')
View(data)
str(data)
library(dlubridate)
library(lubridate)
data<-mutate(data,date=ymd(date))
str(data)
dataday<-group_by(data,date)
dataday<-group_by(data,date)
summarize(dataday,steps=sum(steps,na.rm = TRUE))
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
hist(dataday)
?hist
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
hist(dataday$steps)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10)
?mean
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10)
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10)
meanDaySteps
medianDaySteps
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10)
print('Mean of the total number of steps taken per day')
meanDaySteps
print('Median of the total number of steps taken per day')
medianDaySteps
?plot
dataInterval<-group_by(data,interval)
dataInterval-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
dataInterval<-group_by(data,interval)
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
plot(dataInterval$interval,data$steps, main='Average steps by Inteval', xlab='Interval',type='l')
View(dataInterval)
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l')
maxInterval<-dataInterval[which.max(dataInterval$steps),1]
View(maxInterval)
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l')
dataInterval<-group_by(data,interval)
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
maxInterval<-dataInterval[which.max(dataInterval$steps),1]
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l')
print('5-minute interval which on average contains the maximum number of steps')
maxInterval
dataInterval<-group_by(data,interval)
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
maxInterval<-dataInterval[which.max(dataInterval$steps),1]
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l')
print('5-minute interval which on average contains the maximum number of steps')
maxInterval[1,1]
dataInterval<-group_by(data,interval)
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
maxInterval<-dataInterval[which.max(dataInterval$steps),1]
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l')
print('5-minute interval which on average contains the maximum number of steps')
maxInterval[[1,1]]
sum(is.na(data$steps))
linrary(knn)
library(knn)
library(class)
require(imputation)
require(imputation)
install.packages(imputation)
install.packages('imputation')
?knn.impute
??knn.impute
?mutate_if
dataImp<-mutate_if(data,is.na(),1)
dataImp<-mutate_if(data,is.na,1)
dataImp<-mutate_if(data,is.na,1)
library(zoo)
dataImp<-lapply(data, na.aggregate)
View(dataImp)
dataImp[]<-lapply(data, na.aggregate)
View(dataImp)
dataImp[]<-lapply(data[,1], na.aggregate)
View(dataImp)
dataImp[]<-lapply(data$steps, na.aggregate)
dataImp<-lapply(data$steps, na.aggregate)
View(dataImp)
dataImp<-mutate(data,ifelse(is.na(steps),mean(steps,na.rm = TRUE),steps))
View(dataImp)
dataImp<-mutate(data,steps = ifelse(is.na(steps),mean(steps,na.rm = TRUE),steps))7
dataImp<-mutate(data,steps = (ifelse(is.na(steps),mean(steps,na.rm = TRUE),steps)))
dataday<-group_by(dataImp,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10)
print('Mean of the total number of steps taken per day')
meanDaySteps
print('Median of the total number of steps taken per day')
medianDaySteps
?weekdays
weekdays <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
weekdays <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(data,weekday = (ifelse(weekday(date) %in% weekdays,'weekday','weekend')))
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(data,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
View(dataWeek)
weekdays('2012-11-30')
weekdays(ymd('2012-11-30'))
Sys.setlocale("LC_TIME", "english")
weekdays(ymd('2012-11-30'))
dataWeek<- mutate(data,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
library(ggplot2)
ggplot(data=dataWeek,aes(interval,steps))
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line()
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line()+stat_summary(fun.y = sum)
g+geom_line()+stat_summary(fun.y = sum,na.rm = TRUE)
g+geom_line(aes(group=interval))+stat_summary(fun.y = sum,na.rm = TRUE)
dataday<-group_by(dataWeek,date,weekday)
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(data,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
dataWeek<-group_by(dataWeek,date,weekday)
dataWeek<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
View(dataWeek)
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line()
dataWeek<-group_by(dataWeek,interval,weekday)
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(data,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
dataWeek<-group_by(dataWeek,interval,weekday)
dataWeek<-summarize(dataday,steps=mean(steps,na.rm = TRUE))
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line()
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(data,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
dataWeek<-group_by(dataWeek,interval,weekday)
View(dataWeek)
dataWeek<-summarize(dataday,steps=mean(steps,na.rm = TRUE))
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(data,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
dataWeek<-group_by(dataWeek,interval,weekday)
dataWeek<-summarize(dataWeek,steps=mean(steps,na.rm = TRUE))
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line()
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line() + facet_grid(rows = vars(weekday))
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(dataImp,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
dataWeek<-group_by(dataWeek,interval,weekday)
dataWeek<-summarize(dataWeek,steps=mean(steps,na.rm = TRUE))
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line() + facet_grid(rows = vars(weekday))
library(dplyr)
library(lubridate)
library(class)
library(zoo)
library(ggplot2)
Sys.setlocale("LC_TIME", "english")
file <- 'activity.zip'
data<- 'activity.csv'
if (!file.exists(file)){
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(URL, file, method="curl")
if (!(file.exists(data) )) {
unzip(file)
}
}
data<-read.csv2(data,sep=',')
data<-mutate(data,date=ymd(date))
str(data)
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10,col ='blue')
print('Mean of the total number of steps taken per day')
meanDaySteps
print('Median of the total number of steps taken per day')
medianDaySteps
dataInterval<-group_by(data,interval)
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
maxInterval<-dataInterval[which.max(dataInterval$steps),1]
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l',col='green')
print('5-minute interval which on average contains the maximum number of steps')
maxInterval[[1,1]]
print('Total number of missing values in the dataset')
sum(is.na(data$steps))
dataImp<-mutate(data,steps = (ifelse(is.na(steps),mean(steps,na.rm = TRUE),steps)))
dataday<-group_by(dataImp,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10,col='blue')
print('Mean of the total number of steps taken per day')
meanDaySteps
print('Median of the total number of steps taken per day')
medianDaySteps
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(dataImp,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
dataWeek<-group_by(dataWeek,interval,weekday)
dataWeek<-summarize(dataWeek,steps=mean(steps,na.rm = TRUE))
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line() + facet_grid(rows = vars(weekday))
library(dplyr)
library(lubridate)
library(class)
library(zoo)
library(ggplot2)
Sys.setlocale("LC_TIME", "english")
file <- 'activity.zip'
data<- 'activity.csv'
if (!file.exists(file)){
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(URL, file, method="curl")
if (!(file.exists(data) )) {
unzip(file)
}
}
data<-read.csv2(data,sep=',')
data<-mutate(data,date=ymd(date))
str(data)
dataday<-group_by(data,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10,col ='blue')
print('Mean of the total number of steps taken per day')
meanDaySteps
print('Median of the total number of steps taken per day')
medianDaySteps
dataInterval<-group_by(data,interval)
dataInterval<-summarize(dataInterval,steps=mean(steps,na.rm = TRUE))
maxInterval<-dataInterval[which.max(dataInterval$steps),1]
plot(dataInterval$interval,dataInterval$steps, main='Average steps by Inteval', xlab='Interval',type='l',col='green')
print('5-minute interval which on average contains the maximum number of steps')
maxInterval[[1,1]]
print('Total number of missing values in the dataset')
sum(is.na(data$steps))
dataImp<-mutate(data,steps = (ifelse(is.na(steps),mean(steps,na.rm = TRUE),steps)))
dataday<-group_by(dataImp,date)
dataday<-summarize(dataday,steps=sum(steps,na.rm = TRUE))
meanDaySteps<-mean(dataday$steps,na.rm=TRUE)
medianDaySteps<-median(dataday$steps,na.rm=TRUE)
hist(dataday$steps, main='Total steps taken by day', xlab='Total steps',breaks=10,col='blue')
print('Mean of the total number of steps taken per day')
meanDaySteps
print('Median of the total number of steps taken per day')
medianDaySteps
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(dataImp,weekday = (ifelse(weekdays(date) %in% weekdays,'weekday','weekend')))
weekdays0 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
dataWeek<- mutate(dataImp,weekday = (ifelse(weekdays(date) %in% weekdays0,'weekday','weekend')))
dataWeek<-group_by(dataWeek,interval,weekday)
dataWeek<-summarize(dataWeek,steps=mean(steps,na.rm = TRUE))
g<-ggplot(data=dataWeek,aes(interval,steps))
g+geom_line() + facet_grid(rows = vars(weekday))
setwd("C:/Users/CHRISTIAN/Desktop/Coursera/Specialization/1/Tarea1Reproducible/RepData_PeerAssessment1")
